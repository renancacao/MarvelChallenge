apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: "io.gitlab.arturbosch.detekt"
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: "androidx.navigation.safeargs"

android {
    compileSdkVersion 29
    buildToolsVersion "30.0.0"

    android {
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    dataBinding {
        enabled = true
    }

    defaultConfig {
        applicationId "com.rcacao.marvelchallenge"
        minSdkVersion 22
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        //adicione sua chave publica da api Marvel no arquivo gradle.properties como public_api_key=<chave publica>
        buildConfigField("String", "APIKEY", '"' + getPublicApiKey() + '"')

        //adicione sua chave privada da api Marvel no arquivo gradle.properties como private_api_key=<chave privada>
        buildConfigField("String", "PRIVATE_APIKEY", '"' + getPrivateApiKey() + '"')
        buildConfigField("Integer", "PAGE_SIZE", '20')

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {

    def paging_version = "3.0.0-alpha03"
    def nav_version = "2.3.0"

    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation "com.google.android.material:material:1.1.0"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    //retrofit, okhttp, gson converter
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.8.0'

    //hilt
    implementation "com.google.dagger:hilt-android:2.28-alpha"
    kapt "com.google.dagger:hilt-android-compiler:2.28-alpha"
    kapt 'androidx.hilt:hilt-compiler:1.0.0-alpha02'
    implementation 'androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha02'

    //paging
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"
    testImplementation "androidx.paging:paging-common-ktx:$paging_version"

    //ktx, coroutines
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.0-alpha06"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.3.0-alpha06"
    implementation 'androidx.fragment:fragment-ktx:1.2.5'

    //glide
    implementation 'com.github.bumptech.glide:glide:4.10.0'
    kapt 'com.github.bumptech.glide:compiler:4.10.0'
    kapt "androidx.annotation:annotation:1.1.0"

    //timber
    implementation 'com.jakewharton.timber:timber:4.7.1'

    //swipeRefresh
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'

    //navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"

    //room
    def room_version = "2.2.5"

    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"

}

def getPublicApiKey() {
    return project.findProperty("public_api_key")
}

def getPrivateApiKey() {
    return project.findProperty("private_api_key")
}